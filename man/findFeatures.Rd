% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/features.R
\name{findFeatures}
\alias{findFeatures}
\title{Finding features}
\usage{
findFeatures(analysisInfo, algorithm, ..., verbose = TRUE)
}
\arguments{
\item{analysisInfo}{A \code{data.frame} with \link[=analysis-information]{Analysis information}.}

\item{algorithm}{A character string describing the algorithm that should be
used: \code{"bruker"}, \code{"openms"}, \code{"xcms"}, \code{"xcms3"}, \code{"envipick"}, \code{"sirius"}, \code{"kpic2"}, \code{"safd"}}

\item{\dots}{Further parameters passed to the selected feature finding algorithms.}

\item{verbose}{If set to \code{FALSE} then no text output is shown.}
}
\value{
An object of a class which is derived from \code{\link{features}}.
}
\description{
Automatically find features.
}
\details{
Several functions exist to collect features (\emph{i.e.} retention and MS information that represent potential
compounds) from a set of analyses. All 'feature finders' return an object derived from the \code{\link{features}}
base class. The next step in a general workflow is to group and align these features across analyses with
\code{\link{groupFeatures}}. Note that some feature finders have a plethora of options which sometimes may have a
large effect on the quality of results. Fine-tuning parameters is therefore important, and the optimum is largely
dependent upon applied analysis methodology and instrumentation.

\code{findFeatures} is a generic function that will find features by one of the supported algorithms. The actual
  functionality is provided by algorithm specific functions such as \code{findFeaturesOpenMS} and \code{findFeaturesXCMS}. While these
  functions may be called directly, \code{findFeatures} provides a generic interface and is therefore usually preferred.
}
\note{
In most cases it will be necessary to centroid your MS input files. The only exception is \command{Bruker},
  however, you will still need centroided \file{mzXML}/\file{mzML} files for \emph{e.g.} plotting chromatograms. In
  this case the centroided MS files should be stored in the same directory as the raw \command{Bruker} \file{.d}
  files. The \code{\link{convertMSFiles}} function can be used to centroid data.
}
\seealso{
The \code{\link{features}} output class and its methods and the algorithm specific functions:
  \code{\link{findFeaturesBruker}}, \code{\link{findFeaturesOpenMS}}, \code{\link{findFeaturesXCMS}}, \code{\link{findFeaturesXCMS3}}, \code{\link{findFeaturesEnviPick}}, \code{\link{findFeaturesSIRIUS}}, \code{\link{findFeaturesKPIC2}}, \code{\link{findFeaturesSAFD}}
}
