name: btd
on: workflow_dispatch
jobs:
    build:
        runs-on: windows-latest
        strategy:
            fail-fast: true
            max-parallel: 1
            matrix:
                # R: [ 'release', 'oldrel' ]
                R: [ 'release' ]
        env:
            GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        name: Build ${{ matrix.R }}
        steps:
            - uses: actions/checkout@v3
              with:
                  repository: rickhelmus/patRoonDeps
                  token: ${{ secrets.PAT }}
            - name: Setup R
              uses: r-lib/actions/setup-r@v2
              with:
                  r-version: ${{ matrix.R }}
            - name: Pre-Install R deps
              run: |
                  install.packages(c("miniCRAN", "git2r", "devtools", "BiocManager", "rversions"))
                  BiocManager::install(c("Rdisop", "GenomeInfoDbData")) # sometimes needed as dependency may not be picked up...
                  BiocManager::install("ropls") # For KPIC2
                  remotes::install_github("cran/InterpretMSSpectrum@1.3.3") # workaround for https://github.com/cbroeckl/RAMClustR/issues/48
                  BiocManager::install(c("xcms", "qlcMatrix")) # for cliqueMS
                  install.packages("RAMClustR")
                  remotes::install_github(c("blosloos/nontargetData", "blosloos/nontarget"))
                  remotes::install_github("rickhelmus/KPIC2")
                  remotes::install_github("souravc83/fastAdaboost") # For Metaclean, removed from CRAN (9/22)
                  remotes::install_github("KelseyChetnik/MetaClean")
              shell: Rscript {0}
            - name: Make repos
              run: Rscript make_repos.R
            - name: Get repos patch
              run: |
                  git config --global user.name "notimportant"
                  git config --global user.email "notvalid@someemail.com"
                  git add bin/
                  git diff --binary --cached --full-index > patRoonDeps.diff
            - uses: actions/upload-artifact@v3
              name: Upload patch
              with:
                  name: patch
                  path: patRoonDeps.diff
            - name: Make bundle
              run: Rscript make_bundle.R
            - uses: actions/upload-artifact@v3
              name: Upload bundle
              with:
                  name: bundle
                  path: patRoon-bundle-*.zip
    test:
        needs: build
        runs-on: windows-latest
        name: Run tests
        steps:
            - uses: actions/checkout@v3
              with:
                  path: patRoon
            - name: Get bundle
              uses: actions/download-artifact@v3
              with:
                  name: bundle
                  path: bundle
            - name: do tests
              run: echo not yet
    commit:
        needs: test
        runs-on: windows-latest
        name: Update patRoonDeps
        steps:
            - uses: actions/checkout@v3
              with:
                  repository: rickhelmus/patRoonDeps
                  token: ${{ secrets.PAT }}
            - name: Get patch
              uses: actions/download-artifact@v3
              with:
                  name: patch
            - name: Apply patch
              run: git apply patRoonDeps.diff
            - name: Push changes
              env: 
                  CI_COMMIT_MESSAGE: Automated GHA update
                  CI_COMMIT_AUTHOR: GHA
              run: |
                  git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
                  git config --global user.email "notvalid@someemail.com"
                  git add bin/
                  git status
                  git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
                  #git push
    release:
        needs: test
        runs-on: windows-latest
        name: Make bundle pre-release
        steps:
            - name: Get bundle
              uses: actions/download-artifact@v3
              with:
                  name: bundle
            - name: Make pre-release
              if: ${{ false }}
              uses: andelf/nightly-release@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: prerelease
                  name: 'Automated Pre-release $$'
                  prerelease: true
                  body: 'TODO: Add release notes'
                  files: |
                        patRoon-bundle-*.zip
