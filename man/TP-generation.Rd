% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R, R/TP.R, R/TP-biotransformer.R,
%   R/TP-library.R, R/TP-logic.R
\name{TP-generation}
\alias{TP-generation}
\alias{generateTPs}
\alias{generateTPsBioTransformer}
\alias{generateTPsLibrary}
\alias{generateTPsLogic,featureGroups-method}
\alias{generateTPsLogic}
\alias{generateTPsLogic,featureGroupsSet-method}
\title{Generation of transformation products (TPs)}
\usage{
generateTPs(algorithm, ...)

generateTPsBioTransformer(
  parents,
  type = "env",
  steps = 2,
  extraOpts = NULL,
  skipInvalid = TRUE,
  fpType = "extended",
  fpSimMethod = "tanimoto",
  MP = FALSE
)

generateTPsLibrary(
  parents = NULL,
  TPLibrary = NULL,
  skipInvalid = TRUE,
  matchParentsBy = "InChIKey"
)

\S4method{generateTPsLogic}{featureGroups}(fGroups, minMass = 40, adduct = NULL, transformations = NULL)

\S4method{generateTPsLogic}{featureGroupsSet}(fGroups, minMass = 40, transformations = NULL)
}
\arguments{
\item{algorithm}{A character string describing the algorithm that should be
used: \code{"biotransformer"}, \code{"logic"}, \code{"library"}}

\item{...}{Any parameters to be passed to the selected TP generation algorithm.}

\item{parents}{The parents for which transformation products should be obtained. This can be (1) a suspect list (see
  \link[=suspect-screening]{suspect screening} for more information), (2) the resulting output
  \code{\link{screenSuspects}} or (3) a \code{\link{compounds}} annotation object. In the former two cases, the
  suspect (hits) are used as parents, whereas in the latter case all candidates are used as parents.

  For \code{generateTPsLibrary}: can be \code{NULL}, in this case TPs for all parents in the library are obtained.}

\item{type}{The type of prediction. Valid values are: \code{"env"}, \code{"ecbased"}, \code{"cyp450"},
\code{"phaseII"}, \code{"hgut"}, \code{"superbio"}, \code{"allHuman"}. Sets the \command{-b} command line option.}

\item{steps}{The number of steps for the predictions. Sets the \command{-s} command line option.}

\item{extraOpts}{A \code{character} with extra command line options passed to the \command{biotransformer.jar} tool.}

\item{skipInvalid}{If set to \code{TRUE} then the parents will be skipped (with a warning) for which insufficient
information (\emph{e.g.} SMILES) is available.}

\item{fpType}{The type of structural fingerprint that should be calculated. See the \code{type} argument of the
\code{\link{get.fingerprint}} function of \CRANpkg{rcdk}.}

\item{fpSimMethod}{The method for calculating similarities (i.e. not dissimilarity!). See the \code{method} argument
of the \code{\link{fp.sim.matrix}} function of the \CRANpkg{fingerprint} package.}

\item{MP}{If \code{TRUE} then multiprocessing is enabled. Since \command{BioTransformer} supports native
parallelization, additional multiprocessing generally doesn't lead to significant reduction in computational times.
Furthermore, enabling multiprocessing can lead to very high CPU/RAM usage.}

\item{TPLibrary}{If \code{NULL}, a default \href{https://pubchem.ncbi.nlm.nih.gov}{PubChem} based library is used.
Otherwise, \code{TPLibrary} should be a \code{data.frame}. See section below.}

\item{matchParentsBy}{A \code{character} that specifies how the input parents are matched with the data from the TP
library. Valid options are: \code{"InChIKey"}, \code{"InChIKey1"}, \code{"InChI"}, \code{"SMILES"}.}

\item{fGroups}{A \code{\link{featureGroups}} object for which TPs should be calculated.}

\item{minMass}{A \code{numeric} that specifies the minimum mass of calculated TPs. If below this mass it will be
removed.}

\item{adduct}{An \code{\link{adduct}} object (or something that can be converted to it with \code{\link{as.adduct}}).
  Examples: \code{"[M-H]-"}, \code{"[M+Na]+"}. If the \code{featureGroups} object has
  adduct annotations then these are used if \code{adducts=NULL}.

  \setsWF The \code{adduct} argument is not supported for sets workflows, since the
  adduct annotations will then always be used.}

\item{transformations}{A \code{data.frame} with transformation reactions to be used for calculating the TPs (see
section below). If \code{NULL}, a default table from Schollee \emph{et al.} is used (see references).}
}
\description{
Functionality to automatically obtain transformation products for a given list of parent compounds.
}
\details{
Several algorithms are available that obtain TPs for a set of parent compounds. Depending on the algorithm, the
parents can be a suspect list, all the candidates in a \code{\link{compounds}} object or the screening results or all
feature groups from a \code{\link{featureGroups}} object. The resulting objects can (again depending on the used
algorithm) then be used for conversion to suspect lists (\code{\link{convertToSuspects}}), a \command{MetFrag}
database (\code{\link{convertToMFDB}}) or further processed to generate parent to TP links from features
(\code{\link{generateComponentsTPs}}).

\code{generateTPs} is a generic function that will generate transformation products using one of the supported algorithms. The actual
  functionality is provided by algorithm specific functions such as \code{generateTPsBioTransformer} and \code{generateTPsLogic}. While these
  functions may be called directly, \code{generateTPs} provides a generic interface and is therefore usually preferred.

\code{generateTPsBioTransformer} uses \href{http://biotransformer.ca/}{BioTransformer} to predict TPs. An
  important advantage of this algorithm is that it provides full structural information for TPs. However, to do so,
  structural information also needs to be present for the parents. Afterwards, structural similarities between the
  parent and its TPs are calculated, which can be used to \link[=filter,transformationProductsBT-method]{filter} the
  results. In order to use this function the \file{.jar} command line utility should be installed and specified in
  the \code{\link[=patRoon-package]{patRoon.path.BioTransformer}} option. The \file{.jar} file can be obtained via
  \url{https://bitbucket.org/djoumbou/biotransformer/src/master}.

\code{generateTPsLibrary} obtains transformation products from a library. Similar to
  \code{generateTPsBioTransformer}, this algorithm relies and provides structural information for parents/TPs
  (\acronym{SMILES}). By default, a library is used that is based on data from
  \href{https://pubchem.ncbi.nlm.nih.gov}{PubChem}. However, it also possible to use your own library.

\code{generateTPsLogic} applies \emph{metabolic logic} to predict transformation products. With this
  algorithm, TPs are predicted from common (environmental) chemical reactions, such as hydroxylation, demethylation
  etc. The generated TPs result from calculating the mass differences between a parent feature after it underwent the
  reaction. While this only results in little information on chemical properties of the TP, an advantage of this
  method is that it does not rely on structural information of the parent, which may be unknown in a full non-target
  analysis.
}
\note{
When the \code{parents} argument is a \code{\link{compounds}} object, the candidate library \code{identifier}
  is used in case the candidate has no defined \code{compoundName}.
}
\section{Custom TP libraries and transformations}{
 The \code{TPLibrary} argument is used to specify a custom TP
  library for \code{generateTPsLibrary}. This should be a \code{data.frame} where each row specifies a TP for a
  parent, with the following columns: \itemize{

  \item \code{parent_name} and \code{TP_name}: The name of the parent/TP.

  \item \code{parent_SMILES} and \code{TP_SMILES} The \acronym{SMILES} of the parent structure.

  \item \code{parent_LogP} and \code{TP_LogP} The \code{log P} values for the parent/TP. (\strong{optional})

  \item \code{LogPDiff} The difference between parent and TP \code{Log P} values. Ignored if \emph{both}
  \code{parent_LogP} and \code{TP_LogP} are specified. (\strong{optional})

  }

  Other columns are allowed, and will be included in the final object. Multiple TPs for a single parent are specified
  by repeating the value within \code{parent_} columns.

  Similarly, the \code{transformations} argument to \code{generateTPsLogic} is used to specify custom rules to
  calculate transformation products. This should be a \code{data.frame} with the following columns: \itemize{

  \item \code{transformation} The name of the chemical transformation

  \item \code{add} The elements that are added by this reaction (\emph{e.g.} \code{"O"}).

  \item \code{sub} The elements that are removed by this reaction (\emph{e.g.} \code{"H2O"}).

  \item \code{retDir} The expected retention time direction relative to the parent (assuming a reversed phase like LC
  separation). Valid values are: \samp{-1} (elutes before the parent), \samp{1} (elutes after the parent) or \samp{0}
  (no significant change or unknown).

  }
}

\section{Parallelization}{
 \code{generateTPsBioTransformer} uses multiprocessing to parallelize
  computations. Please see the parallelization section in the handbook for
  more details and \link[=patRoon-package]{patRoon options} for configuration
  options.
}

\section{Source}{
 The algorithm of \code{generateTPsLogic} is directly based on the work done by Schollee \emph{et
  al.} (see references).
}

\references{
\insertRef{DjoumbouFeunang2019}{patRoon} \cr\cr \insertRef{Wicker2015}{patRoon} \cr\cr
  \addCitations{rcdk}{1}

\insertRef{Scholle2015}{patRoon}
}
\seealso{
The \code{\link{transformationProducts}} class and derived classes \code{\link{transformationProductsBT}}
  and \code{\link{transformationProductsLibrary}} for methods to post-process TP data.
}
