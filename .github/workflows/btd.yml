name: btd
on:
    workflow_dispatch:
        inputs:
            makeBundle:
                type: boolean
                description: Make bundle (needed for tests)
                default: true
            doTests:
                type: boolean
                description: Perform tests
                default: true
jobs:
    build:
        runs-on: windows-latest
        strategy:
            fail-fast: true
            max-parallel: 1
            matrix:
                # R: [ 'release', 'oldrel' ]
                R: [ 'release' ]
        env:
            GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        name: Build ${{ matrix.R }}
        steps:
            - uses: actions/checkout@v3
              with:
                  repository: rickhelmus/patRoonDeps
                  token: ${{ secrets.PAT }}
            - name: Setup R
              uses: r-lib/actions/setup-r@v2
              with:
                  r-version: ${{ matrix.R }}
            - name: Pre-Install R deps
              uses: r-lib/actions/setup-r-dependencies@v2
              with:
                  packages: |
                      miniCRAN
                      rversions
                      remotes
                      pkgbuild
                      BiocManager
                      withr
                      data.table
            - name: Make repos
              run: Rscript utils/make_repos.R
            - name: Get repos patch
              run: |
                  git config --global user.name "notimportant"
                  git config --global user.email "notvalid@someemail.com"
                  git add bin/
                  git diff --binary --cached --full-index > patRoonDeps.diff
                  choco install dos2unix
                  dos2unix patRoonDeps.diff
            - uses: actions/upload-artifact@v3
              name: Upload patch
              with:
                  name: patch
                  path: patRoonDeps.diff
            - name: Setting up patRoonExt cache
              uses: actions/cache@v3
              if:  ${{ inputs.makeBundle }}
              with:
                  path: pExtCache
                  key: patRoonExtCache
            - name: Make bundle
              if:  ${{ inputs.makeBundle }}
              env:
                  PATROONEXT_CACHE: ${{ github.workspace }}/pExtCache
              run: Rscript utils/make_bundle.R
            - uses: actions/upload-artifact@v3
              name: Upload bundle
              if:  ${{ inputs.makeBundle }}
              with:
                  name: bundle
                  path: patRoon-bundle-*.zip
    test:
        needs: build
        runs-on: windows-latest
        name: Run tests
        if:  ${{ inputs.makeBundle && inputs.doTests }}
        steps:
            - uses: actions/checkout@v3
              with:
                  path: patRoon
            - uses: r-lib/actions/setup-pandoc@v2
            - name: Get bundle
              uses: actions/download-artifact@v3
              with:
                  name: bundle
                  path: bundle
            - name: Extract bundle
              run: |
                  7z x *.zip
                  ls
              working-directory: bundle
            - name: set PATH
              run: Add-Content $env:GITHUB_PATH "${{ github.workspace }}\bundle\R\bin"
            - name: dump PATH
              run: "echo PATH: ${PATH}"
              shell: bash
            - name: Pre-Install R deps
              uses: r-lib/actions/setup-r-dependencies@v2
              with:
                  packages: |
                      rcmdcheck
                      testthat
                      vdiffr
            - uses: r-lib/actions/check-r-package@v2
              env:
                  PATROON_METFRAG: ${{ github.workspace }}/bundle/R/library/patRoonExt/ext/MetFragCommandLine.jar
                  PATROON_SIRIUS: ${{ github.workspace }}/bundle/R/library/patRoonExt/ext/sirius
                  PATROON_BIOTRANSFORMER: ${{ github.workspace }}/bundle/R/library/patRoonExt/ext/biotransformer/biotransformer-3.0.0.jar
                  PATROON_OBABEL: ${{ github.workspace }}/bundle/R/library/patRoonExt/ext/openbabel
                  PATROON_OPENMS: ${{ github.workspace }}/bundle/R/library/patRoonExt/ext/openms/bin
              with:
                  args: 'c("--no-manual")'
                  build_args: 'c("--no-manual", "--no-build-vignettes")'
                  error-on: '"error"'
                  working-directory: patRoon
    commit:
        needs: test
        runs-on: windows-latest
        name: Update patRoonDeps
        if: ${{ always() && !failure() && !cancelled() }}
        steps:
            - uses: actions/checkout@v3
              with:
                  repository: rickhelmus/patRoonDeps
                  token: ${{ secrets.PAT }}
            - name: Get patch
              uses: actions/download-artifact@v3
              with:
                  name: patch
            - name: Apply patch
              run: git apply patRoonDeps.diff
            - name: Push changes
              env: 
                  CI_COMMIT_MESSAGE: Automated GHA update
                  CI_COMMIT_AUTHOR: GHA
              run: |
                  git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
                  git config --global user.email "notvalid@someemail.com"
                  git add bin/
                  git add patRoonDeps.tsv
                  git status
                  git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
                  git push
    release:
        needs: test
        runs-on: windows-latest
        name: Make bundle pre-release
        if:  ${{ inputs.makeBundle }}
        steps:
            - name: Get bundle
              uses: actions/download-artifact@v3
              with:
                  name: bundle
            - name: Make pre-release
              if: ${{ false }}
              uses: andelf/nightly-release@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: prerelease
                  name: 'Automated Pre-release $$'
                  prerelease: true
                  body: 'TODO: Add release notes'
                  files: |
                        patRoon-bundle-*.zip
