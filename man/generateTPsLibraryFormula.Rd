% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TP-library_formula.R
\name{generateTPsLibraryFormula}
\alias{generateTPsLibraryFormula}
\title{Obtain transformation products (TPs) from a library with formula data}
\usage{
generateTPsLibraryFormula(
  parents = NULL,
  TPLibrary,
  generations = 1,
  skipInvalid = TRUE,
  prefCalcChemProps = TRUE
)
}
\arguments{
\item{parents}{The parents for which transformation products should be obtained. This should be either a suspect list
(see \link[=suspect-screening]{suspect screening} for more information) or the resulting output
\code{\link{screenSuspects}}. The suspect (hits) are used as parents. If \code{NULL} then TPs for all parents in
the library are obtained.}

\item{TPLibrary}{A \code{data.frame}. See the details below.}

\item{generations}{An \code{integer} that specifies the number of transformation generations. TPs for subsequent
iterations obtained by repeating the library search where the TPs from the previous generation are considered
parents.}

\item{skipInvalid}{If set to \code{TRUE} then the parents will be skipped (with a warning) for which insufficient
information (\emph{e.g.} SMILES) is available.}

\item{prefCalcChemProps}{If \code{TRUE} then calculated chemical properties such as the formula and
\acronym{InChIKey} are preferred over what is already present in the parent suspect list. For efficiency reasons it is
recommended to set this to \code{TRUE}. See the \verb{Validating and calculating chemical properties} section for
more details.}
}
\value{
The TPs are stored in an object derived from the \code{\link{transformationProductsFormula}} class.
}
\description{
Automatically obtains transformation products from a library with formula data.
}
\details{
This function uses a library to obtain transformation products. This function is called when calling \code{generateTPs} with
  \code{algorithm="library_formula"}.

This function is similar to \code{\link{generateTPsLibrary}}, however, it only require formula information
  of the parent and TPs.
}
\section{Validating and calculating chemical properties}{
 Chemical properties such as \acronym{SMILES},
  \acronym{InChIKey} and formula in the parent suspect list are automatically validated and calculated if missing/invalid.

  The internal validation/calculation process performs the following steps: \itemize{

  \item Validation of \acronym{SMILES}, \acronym{InChI}, \acronym{InChIKey} and formula data (if present). Invalid
  entries will be set to \code{NA}.

  \item The \acronym{SMILES} and \acronym{InChI} data are used to calculate missing or invalid \acronym{SMILES},
  \acronym{InChI}, \acronym{InChIKey} and formula data. If \code{prefCalcChemProps=TRUE} then existing
  \acronym{InChIKey} and formula data is overwritten by calculated values whenever possible.

  \item The chemical formulae which were \emph{not} calculated are verified and normalized. This process may be time
  consuming, and is potentially largely avoided by setting \code{prefCalcChemProps=TRUE}.

  \item Neutral masses are calculated for missing values (\code{prefCalcChemProps=FALSE}) or whenever possible
  (\code{prefCalcChemProps=TRUE}).

  }

  Note that calculation of formulae for molecules that are isotopically labelled is currently only supported for
  deuterium (2H) elements.

  This functionality relies heavily on \href{http://openbabel.org/wiki/Main_Page}{OpenBabel}, please make sure it is
  installed.
}

\section{TP libraries}{
 The \code{TPLibrary} argument is used to specify a custom TP library. This should be a
  \code{data.frame} where each row specifies a TP for a parent, with the following columns: \itemize{

  \item \code{parent_name} and \code{TP_name}: The name of the parent/TP.

  \item \code{parent_formula} and \code{TP_formula} The chemical formula of the parent/TP.

  }

  Other columns are allowed, and will be included in the final object. Multiple TPs for a single parent are specified
  by repeating the value within \code{parent_} columns.
}

\references{
\insertRef{OBoyle2011}{patRoon}
}
\seealso{
\code{\link{generateTPs}} for more details and other algorithms.

\code{\link{generateTPsLibrary}} to generate TPs from a library that contains structural information.
}
